from build.c import cxxprogram, cxxlibrary

cxxlibrary(
    name="libghidra",
    srcs=[
        "./cpp/marshal.cc",
        "./cpp/space.cc",
        "./cpp/float.cc",
        "./cpp/address.cc",
        "./cpp/pcoderaw.cc",
        "./cpp/translate.cc",
        "./cpp/opcodes.cc",
        "./cpp/globalcontext.cc",
    ],
    cflags=[
        #        "-DLOCAL_ZLIB",
        #        "-DNO_GZIP",
        "-std=c++11",
        "-Wall",
        "-O2",
        "-Wno-sign-compare",
        "-DLINUX",
        "-D_LINUX",
    ],
)

cxxprogram(
    name="decompile",
    srcs=[
        "./cpp/action.cc",
        "./cpp/architecture.cc",
        "./cpp/block.cc",
        "./cpp/blockaction.cc",
        "./cpp/capability.cc",
        "./cpp/cast.cc",
        "./cpp/comment.cc",
        "./cpp/comment_ghidra.cc",
        "./cpp/condexe.cc",
        "./cpp/constseq.cc",
        "./cpp/coreaction.cc",
        "./cpp/cover.cc",
        "./cpp/cpool.cc",
        "./cpp/cpool_ghidra.cc",
        "./cpp/crc32.cc",
        "./cpp/database.cc",
        "./cpp/database_ghidra.cc",
        "./cpp/double.cc",
        "./cpp/dynamic.cc",
        "./cpp/emulate.cc",
        "./cpp/emulateutil.cc",
        "./cpp/flow.cc",
        "./cpp/fspec.cc",
        "./cpp/funcdata.cc",
        "./cpp/funcdata_block.cc",
        "./cpp/funcdata_op.cc",
        "./cpp/funcdata_varnode.cc",
        "./cpp/ghidra_arch.cc",
        "./cpp/ghidra_context.cc",
        "./cpp/ghidra_process.cc",
        "./cpp/ghidra_translate.cc",
        "./cpp/graph.cc",
        "./cpp/heritage.cc",
        "./cpp/inject_ghidra.cc",
        "./cpp/jumptable.cc",
        "./cpp/loadimage.cc",
        "./cpp/loadimage_ghidra.cc",
        "./cpp/memstate.cc",
        "./cpp/merge.cc",
        "./cpp/modelrules.cc",
        "./cpp/multiprecision.cc",
        "./cpp/op.cc",
        "./cpp/opbehavior.cc",
        "./cpp/options.cc",
        "./cpp/override.cc",
        "./cpp/paramid.cc",
        "./cpp/pcodeinject.cc",
        "./cpp/prefersplit.cc",
        "./cpp/prettyprint.cc",
        "./cpp/printc.cc",
        "./cpp/printjava.cc",
        "./cpp/printlanguage.cc",
        "./cpp/rangeutil.cc",
        "./cpp/ruleaction.cc",
        "./cpp/signature.cc",
        "./cpp/signature_ghidra.cc",
        "./cpp/string_ghidra.cc",
        "./cpp/stringmanage.cc",
        "./cpp/subflow.cc",
        "./cpp/transform.cc",
        "./cpp/type.cc",
        "./cpp/typegrp_ghidra.cc",
        "./cpp/typeop.cc",
        "./cpp/unionresolve.cc",
        "./cpp/userop.cc",
        "./cpp/variable.cc",
        "./cpp/varmap.cc",
        "./cpp/varnode.cc",
        "./cpp/xml.cc",
    ],
    cflags=[
        "-std=c++11",
        "-Wall",
        "-O2",
        "-Wno-sign-compare",
        "-DLINUX",
        "-D_LINUX",
    ],
    deps=[".+libghidra"],
)

cxxprogram(
    name="sleigh",
    srcs=[
        "./cpp/sleigh.cc",
        "./cpp/pcodecompile.cc",
        "./cpp/sleighbase.cc",
        "./cpp/slghsymbol.cc",
        "./cpp/slghpatexpress.cc",
        "./cpp/slghpattern.cc",
        "./cpp/semantics.cc",
        "./cpp/context.cc",
        "./cpp/slaformat.cc",
        "./cpp/compression.cc",
        "./cpp/filemanage.cc",
        "./cpp/slgh_compile.cc",
        "./cpp/xml.cc",
        "./cpp/pcodeparse.cc",
        "./cpp/slghparse.cc",
        "./cpp/slghscan.cc",
    ],
    cflags=[
        "-std=c++11",
        "-Wall",
        "-O2",
        "-Wno-sign-compare",
        "-DLINUX",
        "-D_LINUX",
    ],
    ldflags=["-lz"],
    deps=[".+libghidra"],
)
